sort1 uses: Bubble Sort

How do you know?: First I collected the data and then put it into a word table to compare to help with the process.
I identified that Sort 1 was marginally faster for sorted data, implying it was a bubble sort (the compared in pairs sort).


Data Collected:
Random5000
real    0m0.094s
user    0m0.059s
sys     0m0.016s

Random10000
real    0m0.284s
user    0m0.239s
sys     0m0.032s

Random50000
real    0m7.906s
user    0m7.332s
sys     0m0.197s

Reversed5000
real    0m0.134s
user    0m0.053s
sys     0m0.020s

Reversed10000
real    0m0.273s
user    0m0.191s
sys     0m0.044s

Reversed50000
real    0m5.566s
user    0m4.942s
sys     0m0.200s

Sorted5000
real    0m0.096s
user    0m0.005s
sys     0m0.020s

Sorted10000
real    0m0.065s
user    0m0.006s
sys     0m0.038s

Sorted50000
real    0m0.349s
user    0m0.038s
sys     0m0.170s

sort2 uses: Merge Sort

How do you know?: First I collected the data and then put it into a word table to compare to help with the process.
I indentified that sort 2 was faster for random sorting which implies merge sort is likely as it will sort in groups in



Data Collected:

Random5000
real    0m0.039s
user    0m0.008s
sys     0m0.011s

Random10000
real    0m0.056s
user    0m0.008s
sys     0m0.034s

Random50000
real    0m0.327s
user    0m0.031s
sys     0m0.165s

Reversed5000
real    0m0.047s
user    0m0.004s
sys     0m0.021s

Reversed 10000
real    0m0.079s
user    0m0.007s
sys     0m0.037s

Reversed 50000
real    0m0.496s
user    0m0.053s
sys     0m0.170s

Sorted5000
real    0m0.047s
user    0m0.009s
sys     0m0.017s

Sorted10000
real    0m0.069s
user    0m0.010s
sys     0m0.034s

Sorted50000
real    0m0.397s
user    0m0.061s
sys     0m0.155s

sort3 uses: Selection Sort

How do you know?: TODO

First I collected the data and then put it into a word table to compare to help with the process.

Data Collected:

Random5000
real    0m0.043s
user    0m0.026s
sys     0m0.018s

Random10000
real    0m0.158s
user    0m0.098s
sys     0m0.040s

Random50000
real    0m2.987s
user    0m2.572s
sys     0m0.167s

Reversed5000
real    0m0.050s
user    0m0.030s
sys     0m0.017s

Reverse 10000
real    0m0.178s
user    0m0.104s
sys     0m0.042s

Reversed50000
real    0m3.122s
user    0m2.627s
sys     0m0.212s

Sorted5000
real    0m0.049s
user    0m0.031s
sys     0m0.016s

Sorted10000
real    0m0.192s
user    0m0.128s
sys     0m0.022s

Sorted50000
real    0m2.966s
user    0m2.649s
sys     0m0.168s